/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as PublicRouteImport } from './routes/_public'
import { Route as PrivateRouteImport } from './routes/_private'
import { Route as AuthRouteImport } from './routes/_auth'
import { Route as PrivateIndexRouteImport } from './routes/_private/index'
import { Route as PrivateOcrRouteImport } from './routes/_private/ocr'
import { Route as PrivateDashboardRouteImport } from './routes/_private/dashboard'
import { Route as AuthSignInRouteImport } from './routes/_auth/sign-in'
import { Route as Oauth2ProviderCallbackRouteImport } from './routes/oauth2.$provider.callback'

const PublicRoute = PublicRouteImport.update({
  id: '/_public',
  getParentRoute: () => rootRouteImport,
} as any)
const PrivateRoute = PrivateRouteImport.update({
  id: '/_private',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const PrivateIndexRoute = PrivateIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PrivateRoute,
} as any)
const PrivateOcrRoute = PrivateOcrRouteImport.update({
  id: '/ocr',
  path: '/ocr',
  getParentRoute: () => PrivateRoute,
} as any)
const PrivateDashboardRoute = PrivateDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => PrivateRoute,
} as any)
const AuthSignInRoute = AuthSignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => AuthRoute,
} as any)
const Oauth2ProviderCallbackRoute = Oauth2ProviderCallbackRouteImport.update({
  id: '/oauth2/$provider/callback',
  path: '/oauth2/$provider/callback',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/sign-in': typeof AuthSignInRoute
  '/dashboard': typeof PrivateDashboardRoute
  '/ocr': typeof PrivateOcrRoute
  '/': typeof PrivateIndexRoute
  '/oauth2/$provider/callback': typeof Oauth2ProviderCallbackRoute
}
export interface FileRoutesByTo {
  '/sign-in': typeof AuthSignInRoute
  '/dashboard': typeof PrivateDashboardRoute
  '/ocr': typeof PrivateOcrRoute
  '/': typeof PrivateIndexRoute
  '/oauth2/$provider/callback': typeof Oauth2ProviderCallbackRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_auth': typeof AuthRouteWithChildren
  '/_private': typeof PrivateRouteWithChildren
  '/_public': typeof PublicRoute
  '/_auth/sign-in': typeof AuthSignInRoute
  '/_private/dashboard': typeof PrivateDashboardRoute
  '/_private/ocr': typeof PrivateOcrRoute
  '/_private/': typeof PrivateIndexRoute
  '/oauth2/$provider/callback': typeof Oauth2ProviderCallbackRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/sign-in'
    | '/dashboard'
    | '/ocr'
    | '/'
    | '/oauth2/$provider/callback'
  fileRoutesByTo: FileRoutesByTo
  to: '/sign-in' | '/dashboard' | '/ocr' | '/' | '/oauth2/$provider/callback'
  id:
    | '__root__'
    | '/_auth'
    | '/_private'
    | '/_public'
    | '/_auth/sign-in'
    | '/_private/dashboard'
    | '/_private/ocr'
    | '/_private/'
    | '/oauth2/$provider/callback'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthRoute: typeof AuthRouteWithChildren
  PrivateRoute: typeof PrivateRouteWithChildren
  PublicRoute: typeof PublicRoute
  Oauth2ProviderCallbackRoute: typeof Oauth2ProviderCallbackRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_public': {
      id: '/_public'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PublicRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_private': {
      id: '/_private'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PrivateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_private/': {
      id: '/_private/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof PrivateIndexRouteImport
      parentRoute: typeof PrivateRoute
    }
    '/_private/ocr': {
      id: '/_private/ocr'
      path: '/ocr'
      fullPath: '/ocr'
      preLoaderRoute: typeof PrivateOcrRouteImport
      parentRoute: typeof PrivateRoute
    }
    '/_private/dashboard': {
      id: '/_private/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof PrivateDashboardRouteImport
      parentRoute: typeof PrivateRoute
    }
    '/_auth/sign-in': {
      id: '/_auth/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof AuthSignInRouteImport
      parentRoute: typeof AuthRoute
    }
    '/oauth2/$provider/callback': {
      id: '/oauth2/$provider/callback'
      path: '/oauth2/$provider/callback'
      fullPath: '/oauth2/$provider/callback'
      preLoaderRoute: typeof Oauth2ProviderCallbackRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

interface AuthRouteChildren {
  AuthSignInRoute: typeof AuthSignInRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthSignInRoute: AuthSignInRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface PrivateRouteChildren {
  PrivateDashboardRoute: typeof PrivateDashboardRoute
  PrivateOcrRoute: typeof PrivateOcrRoute
  PrivateIndexRoute: typeof PrivateIndexRoute
}

const PrivateRouteChildren: PrivateRouteChildren = {
  PrivateDashboardRoute: PrivateDashboardRoute,
  PrivateOcrRoute: PrivateOcrRoute,
  PrivateIndexRoute: PrivateIndexRoute,
}

const PrivateRouteWithChildren =
  PrivateRoute._addFileChildren(PrivateRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AuthRoute: AuthRouteWithChildren,
  PrivateRoute: PrivateRouteWithChildren,
  PublicRoute: PublicRoute,
  Oauth2ProviderCallbackRoute: Oauth2ProviderCallbackRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
